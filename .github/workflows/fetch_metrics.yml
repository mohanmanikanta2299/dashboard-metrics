name: Update Repository Metrics

on:
  schedule:
    - cron: '0 10 * * *'  # Runs every day
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-metrics:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Use custom authentication

      - name: Install Dependencies
        run: sudo apt-get install -y jq

      - name: Generate GitHub App JWT (Shell)
        id: generate_jwt
        run: |
          chmod +x scripts/generate_jwt.sh
          echo "JWT=$(./scripts/generate_jwt.sh '${{ secrets.GH_APP_ID }}' ${{ secrets.GH_APP_PRIVATE_KEY }}')" >> $GITHUB_ENV

      - name: Get GitHub App Installation Token
        id: get_installation_token
        run: |
          INSTALLATION_TOKEN=$(curl -s -X POST \
            -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/app/installations/${{ secrets.GH_APP_INSTALLATION_ID }}/access_tokens" | jq -r .token)

          if [ -z "$INSTALLATION_TOKEN" ] || [ "$INSTALLATION_TOKEN" == "null" ]; then
            echo "Failed to get installation token"
            exit 1
          fi

          echo "INSTALLATION_TOKEN=$INSTALLATION_TOKEN" >> $GITHUB_ENV

      - name: Set Up Environment Variables
        run: |
          echo "REPO_FILE=repos.txt" >> $GITHUB_ENV
          echo "OUTPUT_FILE=metrics.json" >> $GITHUB_ENV

      - name: Run Metrics Fetch Script
        run: |
          chmod +x scripts/fetch_metrics.sh
          ./scripts/fetch_metrics.sh
        env:
          GITHUB_TOKEN: ${{ env.INSTALLATION_TOKEN }}

      - name: Check for Changes
        id: check_changes
        run: |
          if git diff --quiet metrics.json; then
            echo "No changes detected. Skipping PR creation."
            echo "CHANGED=false" >> $GITHUB_ENV
          else
            echo "Changes detected."
            echo "CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Create Branch and Commit Changes
        if: env.CHANGED == 'true' || env.CHANGED == '1'
        run: |
          BRANCH_NAME="update-metrics-$(date +%Y%m%d%H%M)"
          git checkout -b $BRANCH_NAME
          git config --global user.name "mohanmanikanta2299"
          git config --global user.email "mohanmanikanta2299@users.noreply.github.com"
          git add metrics.json
          git commit -m "Update GitHub repository metrics"
          git push origin $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ env.INSTALLATION_TOKEN }}

      - name: Create Pull Request
        if: env.CHANGED == 'true' || env.CHANGED == '1'
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.INSTALLATION_TOKEN }}
          script: |
            const branchName = process.env.BRANCH_NAME;
            if (!branchName) {
              throw new Error("BRANCH_NAME environment variable is not set.");
            }
              
            const pr = await github.rest.pulls.create({
              owner: "mohanmanikanta2299",
              repo: "dashboard-metrics",
              title: "Automated Update: Repository Metrics",
              head: branchName,
              base: "main",
              body: "This PR updates `metrics.json` with the latest repository metrics.",
              maintainer_can_modify: true
            });

            console.log(`PR Created: ${pr.data.html_url}`);